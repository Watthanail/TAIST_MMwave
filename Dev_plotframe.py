import numpy as np
import matplotlib.pyplot as plt

# Example data (replace with your actual data)
data = [
    np.array([[1.7400e+02+6.5300e+04j, 2.2500e+02+6.5365e+04j, 7.3000e+01+1.0000e+02j,
               6.5394e+04+6.5519e+04j, 3.5000e+01+6.5254e+04j, 3.0300e+02+6.5363e+04j,
               6.0300e+02+1.4500e+02j, 2.6100e+02+2.5800e+02j, 6.5429e+04+2.6000e+02j,
               6.5087e+04+6.5516e+04j, 6.5360e+04+6.5271e+04j, 3.6100e+02+6.5391e+04j,
               4.6100e+02+6.5480e+04j, 6.5500e+04+2.2200e+02j, 6.5300e+04+1.3300e+02j,
               6.9000e+01+1.8900e+02j, 2.9300e+02+1.8100e+02j, 1.6000e+02+1.7000e+02j,
               6.5260e+04+1.7600e+02j, 6.5205e+04+2.1400e+02j, 6.5406e+04+4.8000e+01j,
               1.3700e+02+6.5269e+04j, 4.0400e+02+6.5298e+04j, 1.1500e+02+1.9300e+02j,
               6.5435e+04+6.3000e+02j, 6.5088e+04+3.1700e+02j, 6.5156e+04+6.5356e+04j,
               6.5336e+04+6.5300e+04j, 4.7000e+01+6.5458e+04j, 1.0000e+01+2.2500e+02j,
               6.5434e+04+9.5000e+01j, 6.5461e+04+6.5506e+04j, 2.0000e+00+2.7000e+01j,
               1.8100e+02+3.1300e+02j, 6.5390e+04+3.0700e+02j, 6.4959e+04+6.5358e+04j,
               6.5189e+04+6.4968e+04j, 2.0000e+02+6.5258e+04j, 2.4800e+02+6.5535e+04j,
               1.6700e+02+6.5432e+04j, 6.5534e+04+6.5377e+04j, 6.5122e+04+1.7300e+02j,
               6.5099e+04+1.0300e+02j, 1.6500e+02+6.5227e+04j, 3.4700e+02+6.5410e+04j,
               6.5511e+04+6.5496e+04j, 6.5208e+04+3.0000e+00j, 1.7500e+02+6.5467e+04j,
               6.6500e+02+1.2500e+02j, 2.1800e+02+1.9700e+02j, 6.5411e+04+6.5442e+04j,
               6.5382e+04+6.2000e+01j, 6.5415e+04+1.6200e+02j, 2.1000e+01+6.5359e+04j,
               2.3600e+02+6.5214e+04j, 1.4900e+02+2.2400e+02j, 6.5194e+04+3.5700e+02j,
               6.5314e+04+3.7000e+01j, 1.1100e+02+5.9000e+01j, 6.5479e+04+3.4800e+02j,
               6.5193e+04+8.7000e+01j, 6.5395e+04+6.5447e+04j, 1.3300e+02+6.5469e+04j,
               6.0000e+00+1.8600e+02j]]),
    np.array([[2.5000e+01+6.5434e+04j, 6.5475e+04+2.0800e+02j, 6.5328e+04+2.8600e+02j,
               6.5404e+04+1.3900e+02j, 6.5432e+04+6.5424e+04j, 6.5301e+04+6.5110e+04j,
               6.5479e+04+6.5131e+04j, 3.3000e+02+3.0000e+00j, 2.3400e+02+3.0500e+02j,
               6.5266e+04+7.9000e+01j, 6.5238e+04+6.5321e+04j, 6.5498e+04+6.5484e+04j,
               1.2100e+02+1.5000e+01j, 6.5429e+04+7.8000e+01j, 6.5314e+04+6.5426e+04j,
               6.5506e+04+6.5271e+04j, 3.1700e+02+6.5339e+04j, 4.4200e+02+6.5519e+04j,
               6.6000e+01+2.5000e+02j, 6.5180e+04+1.3600e+02j, 6.5238e+04+6.5411e+04j,
               1.7500e+02+6.5194e+04j, 2.5400e+02+6.5216e+04j, 2.8000e+01+6.5341e+04j,
               1.0600e+02+1.4000e+02j, 1.0900e+02+2.0800e+02j, 7.5000e+01+1.1700e+02j,
               1.2500e+02+6.5365e+04j, 7.2000e+01+4.8000e+01j, 6.5480e+04+3.0900e+02j,
               6.5387e+04+1.9000e+02j, 2.1000e+02+6.5115e+04j, 5.3200e+02+6.5228e+04j,
               3.0000e+02+1.6200e+02j, 1.4600e+02+4.7400e+02j, 6.5389e+04+4.3000e+02j,
               6.5323e+04+5.9000e+01j, 6.5360e+04+6.5450e+04j, 6.5437e+04+6.5505e+04j,
               5.1000e+01+1.2800e+02j, 6.5474e+04+3.7800e+02j, 6.5416e+04+2.9500e+02j,
               6.5453e+04+1.2000e+02j, 9.5000e+01+2.6100e+02j, 6.5369e+04+3.2900e+02j,
               6.5050e+04+2.5000e+01j, 6.5373e+04+1.0000e+00j, 6.5483e+04+6.5505e+04j,
               6.5475e+04+6.5296e+04j, 5.8000e+01+6.5180e+04j, 6.5402e+04+6.5505e+04j,
               6.5230e+04+3.4900e+02j, 6.5026e+04+1.9000e+01j, 6.5445e+04+6.5174e+04j,
               6.5504e+04+6.5312e+04j, 6.5247e+04+6.5508e+04j, 6.5244e+04+8.0000e+00j,
               1.3400e+02+6.5359e+04j, 2.8500e+02+6.5476e+04j, 6.5489e+04+6.5467e+04j,
               6.5329e+04+6.5274e+04j, 9.3000e+01+6.5501e+04j, 1.1200e+02+3.4000e+01j,
               6.5458e+04+6.5289e+04j]
    ])
]

# Extract real and imaginary parts for the first chirp
chirp = data[0]
real_part = np.real(chirp).flatten()
imaginary_part = np.imag(chirp).flatten()

# Prepare the plot
plt.figure(figsize=(12, 8))

# Plot Real Part
plt.subplot(2, 1, 1)
plt.plot(real_part, 'b-o', label='Real Part')
plt.xlabel('Sample Index')
plt.ylabel('Real Part (x)')
plt.title('Real Part of Chirp 1')
plt.legend()
plt.grid(True)

# Plot Imaginary Part
plt.subplot(2, 1, 2)
plt.plot(imaginary_part, 'r-o', label='Imaginary Part')
plt.xlabel('Sample Index')
plt.ylabel('Imaginary Part (y)')
plt.title('Imaginary Part of Chirp 1')
plt.legend()
plt.grid(True)

plt.tight_layout()
plt.show()
